#!/bin/bash

FAILURE=

function start_test() {
    echo -n $1
}

function finish_test() {
    if [[ $? != 0 ]]; then
      FAILURE="true"
      echo " ðŸ”´"
    else
      echo " âœ…"
    fi
}

# if ! git diff-index --quiet HEAD; then
#   echo "Git has uncommitted changes"
#   exit 1
# fi

test=tests/01-release-and-post-release.sh
start_test "01-release-and-post-release"
TEST_PATH=$(mktemp -d)
cp -R tests/fixture $TEST_PATH
pushd $TESTPATH
git init
git commit -am "Initial commit"
PATH=$PATH:$(realpath ..) /bin/sh $test
git diff --unified=0 > $test.actual.diff
popd
sed -i.bak '/^index/d' $test.actual.diff
sed -i.bak 's/[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]/2000-01-01/g' $test.actual.diff
diff $test.expected.diff $test.actual.diff
finish_test

# start_test "## 02: Only release "
# pushd test-fixture > /dev/null
# ../polyglot-release 1.0.0 --no-git-commit --no-git-tag-check --only-release
# popd > /dev/null
# git diff --unified=0 > 02-actual.diff
# sed -i.bak '/^index/d' 02-actual.diff
# sed -i.bak 's/[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]/2000-01-01/g' 02-actual.diff
# diff 02-expected.diff 02-actual.diff
# finish_test
# git restore --source=HEAD --staged --worktree -- test-fixture

# start_test "## 03: Show unreleased changes "
# pushd test-fixture > /dev/null
# ../polyglot-release --no-git-tag-check > ../03-actual.output
# popd > /dev/null
# diff 03-expected.output 03-actual.output
# finish_test
# git restore --source=HEAD --staged --worktree -- test-fixture

test -z $FAILURE

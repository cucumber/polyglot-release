#!/bin/bash

FAILURE=

function start_test() {
    echo -n $1
}

function finish_test() {
    if [[ $? != 0 ]]; then
      FAILURE="true"
      echo " ðŸ”´"
    else
      echo " âœ…"
    fi
}

# if ! git diff-index --quiet HEAD; then
#   echo "Git has uncommitted changes"
#   exit 1
# fi

SRC=$(realpath .)
TESTS=$(realpath tests)

for test in $TESTS/*.sh; do
  start_test ${test##*/}
  WORKDIR=$(mktemp -d)
  cp -R ./tests/fixture $WORKDIR
  pushd $WORKDIR/fixture > /dev/null
  git init --quiet
  git add .
  git commit -m "Initial commit" --quiet
  PATH=$PATH:$SRC /bin/sh $test > $test.actual.output
  git diff --unified=0 > $test.actual.diff
  popd > /dev/null
  if [ -f $test.expected.diff ]; then
    sed -i.bak '/^index/d' $test.actual.diff
    sed -i.bak 's/[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]/2000-01-01/g' $test.actual.diff
    diff $test.expected.diff $test.actual.diff
  else
    diff $test.expected.output $test.actual.output
  fi
  finish_test
done

# # start_test "## 03: Show unreleased changes "
# # pushd test-fixture > /dev/null
# # ../polyglot-release --no-git-tag-check > ../03-actual.output
# # popd > /dev/null
# # diff 03-expected.output 03-actual.output
# # finish_test
# # git restore --source=HEAD --staged --worktree -- test-fixture

# test -z $FAILURE
